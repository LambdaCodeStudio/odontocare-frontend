---
import LayoutCommon from "../app/LayoutCommon.astro";
import LayoutProtected from "../app/LayoutProtected.astro";

interface ConsultaData {
  id: string | null;
  paso1: Record<string, any>;
  paso2: Record<string, any>;
  paso3: Record<string, any>;
}
---

<LayoutProtected>
<LayoutCommon>
  <div class="min-h-screen bg-gradient-to-r from-slate-100 to-slate-200 p-4 text-slate-800 dark:from-slate-900 dark:to-slate-800 dark:text-slate-100 lg:p-16">
    <div class="mx-auto max-w-4xl">
      <div class="mb-8">
        <button id="volverBtn" class="text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300">
          ← Volver a consultas
        </button>
      </div>

      <div class="rounded-lg bg-white p-6 shadow-xl dark:bg-gray-800">
        <!-- Navegación entre pasos -->
        <div class="mb-8 flex justify-between">
          <button id="paso1Btn" class="paso-btn border-b-2 border-blue-600 px-4 py-2 font-semibold text-blue-600 dark:border-blue-400 dark:text-blue-400">
            Datos Personales
          </button>
          <button id="paso2Btn" class="paso-btn px-4 py-2 font-semibold text-gray-400">
            Estado Actual
          </button>
          <button id="paso3Btn" class="paso-btn px-4 py-2 font-semibold text-gray-400">
            Anotaciones Médicas
          </button>
        </div>

        <!-- Formulario Paso 1: Datos Personales -->
        <form id="paso1" class="space-y-6">
          <div class="space-y-4">
            <div>
              <label for="alergia" class="block text-sm font-medium text-gray-700 dark:text-gray-300">
                Alergias
              </label>
              <textarea
                id="alergia"
                name="alergia"
                rows="2"
                maxlength="240"
                class="mt-1 w-full rounded-md border border-gray-300 bg-white p-2 dark:border-gray-600 dark:bg-gray-700 dark:text-white focus:border-blue-500 focus:ring-blue-500"
              ></textarea>
            </div>

            <div>
              <label for="padeceEnfermedad" class="block text-sm font-medium text-gray-700 dark:text-gray-300">
                ¿Qué enfermedades padece?
              </label>
              <textarea
                id="padeceEnfermedad"
                name="padeceEnfermedad"
                rows="2"
                maxlength="240"
                class="mt-1 w-full rounded-md border border-gray-300 bg-white p-2 dark:border-gray-600 dark:bg-gray-700 dark:text-white focus:border-blue-500 focus:ring-blue-500"
              ></textarea>
            </div>

            <div class="flex items-center space-x-2">
              <input
                type="checkbox"
                id="esPacienteCardiaco"
                name="esPacienteCardiaco"
                class="h-4 w-4 rounded border-gray-300 text-blue-600 focus:ring-blue-500 dark:border-gray-600"
              />
              <label for="esPacienteCardiaco" class="text-sm text-gray-700 dark:text-gray-300">
                ¿Es paciente cardíaco?
              </label>
            </div>
          </div>

          <div class="flex justify-end space-x-4">
            <button
              type="button"
              id="cancelarBtn"
              class="rounded-lg bg-gray-200 px-4 py-2 text-gray-700 hover:bg-gray-300 dark:bg-gray-700 dark:text-gray-300 dark:hover:bg-gray-600"
            >
              Cancelar
            </button>
            <button
              type="button"
              id="siguiente1"
              class="rounded-lg bg-blue-600 px-4 py-2 text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2"
            >
              Siguiente
            </button>
          </div>
        </form>

        <!-- Formulario Paso 2: Estado Actual -->
        <form id="paso2" class="hidden space-y-6">
          <div class="space-y-4">
            <div>
              <label for="tomaMedicacion" class="block text-sm font-medium text-gray-700 dark:text-gray-300">
                ¿Qué medicación toma actualmente?
              </label>
              <textarea
                id="tomaMedicacion"
                name="tomaMedicacion"
                rows="2"
                maxlength="240"
                class="mt-1 w-full rounded-md border border-gray-300 bg-white p-2 dark:border-gray-600 dark:bg-gray-700 dark:text-white focus:border-blue-500 focus:ring-blue-500"
              ></textarea>
            </div>

            <div>
              <label for="estadoActualBoca" class="block text-sm font-medium text-gray-700 dark:text-gray-300">
                Estado actual de la boca
              </label>
              <textarea
                id="estadoActualBoca"
                name="estadoActualBoca"
                rows="2"
                maxlength="240"
                class="mt-1 w-full rounded-md border border-gray-300 bg-white p-2 dark:border-gray-600 dark:bg-gray-700 dark:text-white focus:border-blue-500 focus:ring-blue-500"
              ></textarea>
            </div>
          </div>

          <div class="flex justify-end space-x-4">
            <button
              type="button"
              id="anterior2"
              class="rounded-lg bg-gray-200 px-4 py-2 text-gray-700 hover:bg-gray-300 dark:bg-gray-700 dark:text-gray-300 dark:hover:bg-gray-600"
            >
              Anterior
            </button>
            <button
              type="button"
              id="siguiente2"
              class="rounded-lg bg-blue-600 px-4 py-2 text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2"
            >
              Siguiente
            </button>
          </div>
        </form>

        <!-- Formulario Paso 3: Anotaciones Médicas -->
        <form id="paso3" class="hidden space-y-6">
          <div class="space-y-4">
            <div>
              <label for="anotacionesMedico" class="block text-sm font-medium text-gray-700 dark:text-gray-300">
                Anotaciones del Médico
              </label>
              <textarea
                id="anotacionesMedico"
                name="anotacionesMedico"
                rows="4"
                maxlength="240"
                class="mt-1 w-full rounded-md border border-gray-300 bg-white p-2 dark:border-gray-600 dark:bg-gray-700 dark:text-white focus:border-blue-500 focus:ring-blue-500"
              ></textarea>
            </div>
          </div>

          <div class="flex justify-end space-x-4">
            <button
              type="button"
              id="anterior3"
              class="rounded-lg bg-gray-200 px-4 py-2 text-gray-700 hover:bg-gray-300 dark:bg-gray-700 dark:text-gray-300 dark:hover:bg-gray-600"
            >
              Anterior
            </button>
            <button
              type="button"
              id="guardar"
              class="rounded-lg bg-green-600 px-4 py-2 text-white hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2"
            >
              Guardar Consulta
            </button>
          </div>
        </form>
      </div>
    </div>
  </div>
</LayoutCommon>
</LayoutProtected>

<script>
const BASE_URL = "";

let consultaData = {
    id: new URLSearchParams(window.location.search).get('id'),
    paso1: {},
    paso2: {},
    paso3: {}
};

async function cargarDatosCita() {
    try {
        const params = new URLSearchParams(window.location.search);
        const citaId = params.get('id');

        if (!citaId) {
            throw new Error('No se proporcionó ID de cita');
        }

        const response = await fetch(`${BASE_URL}/citas/${citaId}`);
        if (!response.ok) {
            throw new Error('Error al cargar datos de la cita');
        }

        const cita = await response.json();
        console.log('Datos de la cita cargados:', cita); // Para verificar la estructura
        consultaData.citaInfo = cita;

    } catch (error) {
        console.error('Error al cargar datos de la cita:', error);
        alert('Error al cargar los datos de la consulta');
    }
}

function mostrarPaso(numero) {
    document.querySelectorAll('form').forEach(form => form.classList.add('hidden'));
    document.getElementById(`paso${numero}`)?.classList.remove('hidden');

    document.querySelectorAll('.paso-btn').forEach(btn => {
      btn.classList.remove('text-blue-600', 'dark:text-blue-400', 'border-b-2', 'border-blue-600', 'dark:border-blue-400');
      btn.classList.add('text-gray-400');
    });

    const botonActivo = document.getElementById(`paso${numero}Btn`);
    if (botonActivo) {
      botonActivo.classList.remove('text-gray-400');
      botonActivo.classList.add('text-blue-600', 'dark:text-blue-400', 'border-b-2', 'border-blue-600', 'dark:border-blue-400');
    }
}

function recolectarDatosPaso(numero) {
    const form = document.getElementById(`paso${numero}`);
    if (!form) return;

    const formData = new FormData(form);
    const datos = {};

    formData.forEach((value, key) => {
        if (key === 'esPacienteCardiaco') {
            datos[key] = value === 'on';
        } else {
            datos[key] = value;
        }
    });

    consultaData[`paso${numero}`] = datos;
}

async function guardarConsulta(e) {
    if (e) e.preventDefault();
    recolectarDatosPaso(1);
    recolectarDatosPaso(2);
    recolectarDatosPaso(3);

    try {
        // Corregir la obtención del ID del paciente
        let pacienteId;
        if (typeof consultaData.citaInfo.pacienteId === 'object') {
            pacienteId = consultaData.citaInfo.pacienteId.id;
        } else {
            pacienteId = consultaData.citaInfo.pacienteId;
        }

        // Verificar que tenemos un ID válido
        if (!pacienteId) {
            throw new Error('No se pudo obtener el ID del paciente');
        }

        const historiaClinicaData = {
            pacienteId: pacienteId, // Ahora solo enviamos el ID
            citaId: consultaData.id,
            alergia: consultaData.paso1.alergia || '',
            padeceEnfermedad: consultaData.paso1.padeceEnfermedad || '',
            esPacienteCardiaco: Boolean(consultaData.paso1.esPacienteCardiaco),
            tomaMedicacion: consultaData.paso2.tomaMedicacion || '',
            estadoActualBoca: consultaData.paso2.estadoActualBoca || '',
            anotacionesMedico: consultaData.paso3.anotacionesMedico || ''
        };

        console.log('Datos a enviar:', historiaClinicaData); // Para debugging

        const responseHistoriaClinica = await fetch(`${BASE_URL}/historiaClinica/create`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(historiaClinicaData)
        });

        if (!responseHistoriaClinica.ok) {
            const errorData = await responseHistoriaClinica.json();
            console.error('Error respuesta:', errorData);
            throw new Error(errorData.message || 'Error al guardar la historia clínica');
        }

        // Actualizar estado de la cita usando el mismo ID del paciente
        const citaUpdateData = {
            estado: 'completada',
            fecha: consultaData.citaInfo.fecha,
            medicoId: consultaData.citaInfo.medicoId._id || consultaData.citaInfo.medicoId,
            pacienteId: pacienteId // Usar el mismo ID corregido
        };

        const responseEstado = await fetch(`${BASE_URL}/citas/${consultaData.id}`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(citaUpdateData)
        });

        if (!responseEstado.ok) {
            throw new Error('Error al actualizar el estado de la cita');
        }

        alert('Consulta guardada exitosamente');
        window.location.href = '/';

    } catch (error) {
        console.error('Error detallado:', error);
        alert('Error al guardar la consulta: ' + error.message);
    }
}

// Event Listeners
document.getElementById('volverBtn')?.addEventListener('click', (e) => {
    e.preventDefault();
    window.location.href = '/';
});

document.getElementById('cancelarBtn')?.addEventListener('click', (e) => {
    e.preventDefault();
    if (confirm('¿Está seguro que desea cancelar? Se perderán los cambios no guardados.')) {
        window.location.href = '/';
    }
});

['paso1Btn', 'paso2Btn', 'paso3Btn'].forEach((id, index) => {
    document.getElementById(id)?.addEventListener('click', () => mostrarPaso(index + 1));
});

document.getElementById('siguiente1')?.addEventListener('click', () => {
    recolectarDatosPaso(1);
    mostrarPaso(2);
});

document.getElementById('anterior2')?.addEventListener('click', () => mostrarPaso(1));

document.getElementById('siguiente2')?.addEventListener('click', () => {
    recolectarDatosPaso(2);
    mostrarPaso(3);
});

document.getElementById('anterior3')?.addEventListener('click', () => mostrarPaso(2));

document.getElementById('guardar')?.addEventListener('click', (e) => guardarConsulta(e));

document.addEventListener('DOMContentLoaded', () => {
    cargarDatosCita();
});

// Inicializar mostrando el primer paso
mostrarPaso(1);
</script>